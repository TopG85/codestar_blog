from django.db import models
from django.forms import fields

import bleach
from django_summernote.settings import ALLOWED_TAGS, ATTRIBUTES, STYLES
from django_summernote.widgets import SummernoteWidget

# code based on https://github.com/shaunsephton/django-ckeditor


class SummernoteTextFormField(fields.CharField):
    def __init__(self, *args, **kwargs):
        kwargs.update({'widget': SummernoteWidget()})
        super().__init__(*args, **kwargs)

    def to_python(self, value):
        value = super().to_python(value)
        try:
            # Older bleach versions accepted a `styles` kwarg.
            return bleach.clean(
                value, tags=ALLOWED_TAGS, attributes=ATTRIBUTES, styles=STYLES)
        except TypeError:
            # bleach 6+ uses a css_sanitizer instead of `styles`.
            try:
                from bleach.sanitizer import CSSSanitizer

                css_sanitizer = CSSSanitizer(allowed_css_properties=STYLES)
                return bleach.clean(
                    value, tags=ALLOWED_TAGS, attributes=ATTRIBUTES, css_sanitizer=css_sanitizer
                )
            except Exception:
                # Last resort: call bleach.clean without style sanitization
                return bleach.clean(value, tags=ALLOWED_TAGS, attributes=ATTRIBUTES)


class SummernoteTextField(models.TextField):
    def formfield(self, **kwargs):
        kwargs.update({'form_class': SummernoteTextFormField})
        return super().formfield(**kwargs)

    def to_python(self, value):
        value = super().to_python(value)
        try:
            return bleach.clean(
                value, tags=ALLOWED_TAGS, attributes=ATTRIBUTES, styles=STYLES)
        except TypeError:
            try:
                from bleach.sanitizer import CSSSanitizer

                css_sanitizer = CSSSanitizer(allowed_css_properties=STYLES)
                return bleach.clean(
                    value, tags=ALLOWED_TAGS, attributes=ATTRIBUTES, css_sanitizer=css_sanitizer
                )
            except Exception:
                return bleach.clean(value, tags=ALLOWED_TAGS, attributes=ATTRIBUTES)
